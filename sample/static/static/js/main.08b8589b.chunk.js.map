{"version":3,"sources":["reportWebVitals.js","usersList.js","userAdd.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","getUsers","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","fetch","method","headers","abrupt","sent","stop","apply","arguments","UsersList","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","isFetching","users","_createClass","key","value","_this2","response","ok","json","setState","data","map","x","last_name","first_name","catch","_jsxs","children","_jsx","this","item","index","React","userAdd","user","body","JSON","stringify","_x","UserAdd","addUser","e","preventDefault","name","document","getElementById","job","userAdded","newUserID","id","onSubmit","class","for","type","ReactDOM","render","StrictMode"],"mappings":"wKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,G,iDCNMS,EAAQ,eAAAN,EAAAO,YAAAC,cAAAC,MAAG,SAAAC,IAAA,OAAAF,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEFC,MAJW,gBAIc,CAClCC,OAAQ,MACRC,QAAU,CACN,eAAgB,sBAEpB,cAAAL,EAAAM,OAAA,SAAAN,EAAAO,MAAA,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KACL,kBARa,OAAAV,EAAAqB,MAAA,KAAAC,UAAA,KA2DCC,EAjDA,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAEX,SAAAA,IAAe,IAADK,EAKR,OALQC,YAAA,KAAAN,IACVK,EAAAF,EAAAI,KAAA,OACKC,MAAQ,CACTC,YAAY,EACZC,MAAO,IACTL,CACN,CAsCC,OAtCAM,YAAAX,EAAA,EAAAY,IAAA,oBAAAC,MAED,WAAqB,IAADC,EAAA,KAChB/B,IACKP,MAAK,SAACuC,GACCA,EAASC,IACTD,EAASE,OAAOzC,MAAK,SAAAyC,GACjBH,EAAKI,SACD,CACIT,YAAY,EACZC,MAAOO,EAAKE,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,UAAY,IAAMD,EAAEE,UAAU,KAGtE,GAER,IACCC,OAAM,WACHV,EAAKI,SAAS,CAAET,YAAY,GAChC,GACR,GAAC,CAAAG,IAAA,SAAAC,MAED,WACI,OACIY,eAAA,OAAAC,SAAA,CACIC,cAAA,MAAAD,SAAI,kBACJC,cAAA,MAAAD,SAEQE,KAAKpB,MAAMC,WAEPkB,cAAA,KAAAD,SAAG,sBAEHE,KAAKpB,MAAME,MAAMU,KAAI,SAACS,EAAMC,GAAK,OAC7BH,cAAA,MAAAD,SAAiBG,GAARC,EAAkB,QAMvD,KAAC9B,CAAA,CA9CU,CAAS+B,aCVlBC,EAAO,eAAAvD,EAAAO,YAAAC,cAAAC,MAAG,SAAAC,EAAO8C,GAAI,OAAAhD,cAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEZC,MAJS,gBAIc,CAChCC,OAAQ,OACRC,QAAU,CACR,OAAU,mBACV,eAAgB,oBAElBwC,KAAMC,KAAKC,UAAUH,KACrB,cAAA5C,EAAAM,OAAA,SAAAN,EAAAO,MAAA,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KACL,gBAVYkD,GAAA,OAAA5D,EAAAqB,MAAA,KAAAC,UAAA,KA2EEuC,EA/DF,SAAArC,GAAAC,YAAAoC,EAAArC,GAAA,IAAAE,EAAAC,YAAAkC,GAET,SAAAA,IAAe,IAADjC,EAKR,OALQC,YAAA,KAAAgC,IACVjC,EAAAF,EAAAI,KAAA,OAOJgC,QAAU,SAACC,GACPA,EAAEC,iBAEF,IAAMC,EAAOC,SAASC,eAAe,QAAQ/B,MACvCgC,EAAMF,SAASC,eAAe,OAAO/B,MAG3CmB,EAAQ,CACJ,KAAQU,EACR,IAAOG,IACRrE,MAAK,SAAAuC,GACAA,EAASC,IACTD,EAASE,OAAOzC,MAAK,SAAAyC,GACjBZ,EAAKa,SACD,CACI4B,WAAW,EACXC,UAAW9B,EAAK+B,IAG5B,GAER,GACJ,EA5BI3C,EAAKG,MAAQ,CACTsC,WAAW,EACXC,UAAW,MACb1C,CACN,CAoDC,OApDAM,YAAA2B,EAAA,EAAA1B,IAAA,SAAAC,MA0BD,WACI,OACIY,eAAA,OAAAC,SAAA,CACIC,cAAA,MAAAD,SAAI,eACJD,eAAA,QAAMwB,SAAUrB,KAAKW,QAAQb,SAAA,CACzBD,eAAA,OAAKyB,MAAM,aAAYxB,SAAA,CACnBC,cAAA,SAAOwB,IAAI,OAAMzB,SAAC,qBAClBC,cAAA,SAAOyB,KAAK,OAAOJ,GAAG,YAG1BvB,eAAA,OAAKyB,MAAM,aAAYxB,SAAA,CACnBC,cAAA,SAAOwB,IAAI,MAAKzB,SAAC,oBACjBC,cAAA,SAAOyB,KAAK,OAAOJ,GAAG,WAG1BrB,cAAA,UAAQyB,KAAK,SAAQ1B,SAAC,gBAGtBE,KAAKpB,MAAMsC,UAEXrB,eAAA,QAAMyB,MAAM,QAAOxB,SAAA,CAAC,mCAAiCE,KAAKpB,MAAMuC,aAEhEpB,cAAA,aAIhB,KAACW,CAAA,CA5DQ,CAASP,aCRtBsB,IAASC,OACP7B,eAACM,IAAMwB,WAAU,CAAA7B,SAAA,CACfD,eAAA,MAAAC,SAAA,CAAI,iBAAcC,cAAA,KAAAD,SAAG,sBACrBC,cAAC3B,EAAS,IACV2B,cAACW,EAAO,OAEVK,SAASC,eAAe,SAM1BvE,G","file":"static/js/main.08b8589b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\n\nconst usersListEndpoint = \"/reqres/users\";\n\nconst getUsers = async () => {\n\n  return await fetch(usersListEndpoint, {\n      method: \"GET\",\n      headers:  {\n          'Content-Type': 'application/json'\n      }\n    })\n};\n\nclass UsersList extends React.Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            isFetching: true,\n            users: [] \n        };\n    }\n\n    componentDidMount() {\n        getUsers()\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then(json => {\n                        this.setState(\n                            {\n                                isFetching: false,\n                                users: json.data.map(x => x.last_name + \" \" + x.first_name)\n                            }\n                        )\n                    })\n                }\n            })\n            .catch(() => {\n                this.setState({ isFetching: false });\n            });\n    }\n    \n    render() {\n        return (\n            <div>\n                <h2>List of users</h2>\n                <ul>\n                    {\n                        this.state.isFetching\n                        ?\n                            <i>Fetchin' data ...</i>\n                        :\n                            this.state.users.map((item, index) =>\n                                <li key={index}>{item}</li>\n                            )\n                        }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default UsersList;","import * as React from 'react';\n\nconst userAddEndpoint = \"/reqres/users\";\n\nconst userAdd = async (user) => {\n\n  return await fetch(userAddEndpoint, {\n      method: \"POST\",\n      headers:  {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n};\n\nclass UserAdd extends React.Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            userAdded: false,\n            newUserID: null\n        };\n    }\n\n    addUser = (e) => {\n        e.preventDefault();\n        \n        const name = document.getElementById(\"name\").value\n        const job = document.getElementById(\"job\").value\n\n        // Call the API\n        userAdd({\n            \"name\": name,\n            \"job\": job\n        }).then(response => {\n            if (response.ok) {\n                response.json().then(json => {\n                    this.setState(\n                        {\n                            userAdded: true,\n                            newUserID: json.id\n                        }\n                    )\n                })\n            }\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Add a user</h2>\n                <form onSubmit={this.addUser}>\n                    <div class=\"form-field\">\n                        <label for=\"name\">New user's name:</label>\n                        <input type=\"text\" id=\"name\" />\n                    </div>\n\n                    <div class=\"form-field\">\n                        <label for=\"job\">New user's job:</label>\n                        <input type=\"Text\" id=\"job\" />\n                    </div>\n\n                    <button type=\"submit\">Add user</button>\n                </form>\n                {\n                    this.state.userAdded\n                    ?\n                    <span class=\"green\">User added successfuly. New ID: {this.state.newUserID}</span>\n                    :\n                    <span></span>\n                }\n            </div>\n        );\n    }\n}\n\nexport default UserAdd;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport UsersList from \"./usersList\"\nimport UserAdd from \"./userAdd\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>Demo site for <i>flask-reactize</i></h1>\n    <UsersList />\n    <UserAdd />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}