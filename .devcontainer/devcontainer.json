// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.238.0/containers/python-3
{
	"name": "flask-reactize",
	"build": {
		"dockerfile": "Dockerfile",
		"context": "..",
		"args": {
			// Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
			// Append -bullseye or -buster to pin to an OS version.
			// Use -bullseye variants on local on arm64/Apple Silicon.
			"USERNAME": "vscode",
			"VARIANT": "3.9-bullseye",
			// Options
			"NODE_VERSION": "lts/*"
		}
	},

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"python.pythonPath": "/usr/bin/python3",
                "python.envFile": "${workspaceFolder}/python-path.env",
                "python.formatting.provider": "black",
                "python.testing.nosetestsEnabled": false,
                "python.testing.pytestEnabled": true
			},

			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-python.python",
                "ms-python.vscode-pylance",
                "ms-azuretools.vscode-docker",
                "irongeek.vscode-env"
			]
		}
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [8080],

	// Use 'postCreateCommand' to run commands after the container is created.

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode",
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:1": {
            "version": "latest"
        },
		"ghcr.io/devcontainers/features/node:1": {
            "version": "16"
        }
	},
    "mounts": [
        "source=${localEnv:HOME}${env:USERPROFILE}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached",
        "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind"
    ]
}